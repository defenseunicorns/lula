family: SC
control-acronym: SC-4(2)
control-information: >-
  Description:

  The information system prevents unauthorized information transfer via shared
  resources in accordance with [Assignment: organization-defined procedures]
  when system processing explicitly switches between different information
  classification levels or security categories.


  Supplemental Guidance:

  This control enhancement applies when there are explicit changes in
  information processing levels during information system operations, for
  example, during multilevel processing and periods processing with information
  at different classification levels or security categories.
  Organization-defined procedures may include, for example, approved
  sanitization processes for electronically stored information.


  Potential Assessment Methods and Objectives:

  The below information from the NIST SP 800-53 Revision 4 Security Catalog is
  intended to provide additional optional mechanisms to take into account when
  reviewing this Security Control. Assessments of the individual security
  requirements must still include a response to the specific procedures/guidance
  stated in the correlated Assessment Procedures.

  Examine: [SELECT FROM: System and communications protection policy; procedures
  addressing information protection in shared system resources; information
  system design documentation; information system configuration settings and
  associated documentation; information system audit records; other relevant
  documents or records].


  Interview: [SELECT FROM: System/network administrators; organizational
  personnel with information security responsibilities; system developer].


  Test: [SELECT FROM: Automated mechanisms preventing unauthorized transfer of
  information via shared system resources].
control-implementation-status: Not Applicable
security-control-designation: System-Specific
control-implementation-narrative: ...
ap-acronym: SC-4(2).1
cci: 2383
cci-definition: >-
  002383: The organization defines the procedures to be employed to prevent the
  unauthorized information transfer via shared resources when system processing
  explicitly switches between different information classification levels or
  security categories.
implementation-guidance: >-
  The organization being inspected/assessed defines and documents the procedures
  to be employed to prevent the unauthorized information transfer via shared
  resources when system processing explicitly switches between different
  information classification levels or security categories. DoD has determined
  the procedures are not appropriate to define at the Enterprise level.

  Recommended Compelling Evidence:

  1.) Signed and dated procedure documentation to prevent the unauthorized
  information transfer via shared resources when system processing explicitly
  switches between different information classification levels or security
  categories.
assessment-procedures: >-
  The organization conducting the inspection/assessment obtains and examines the
  documented procedures to ensure the organization being inspected/assessed
  defines the procedures to be employed to prevent the unauthorized information
  transfer via shared resources when system processing explicitly switches
  between different information classification levels or security categories.
  DoD has determined the procedures are not appropriate to define at the
  Enterprise level.
inherited: Local
remote-inheritance-instance: '-'
compliance-status: Compliant
test-results: "UDS prevents unauthorized information sharing through shared resources. Because each container has isolated memory and storage, one app cannot peek into anotherâ\x80\x99s memory space. Even within a node, the kernel enforces separation between containers (namespaces ensure, for example, a process in one container cannot see processes or memory of another container). Kubernetes by default also segregates resources a volume mounted to one pod is not accessible to another unless explicitly shared. Temporary files or memory are local to each container. If sensitive data is in memory of Service A, Service B cannot access it unless Service A explicitly sends it (which would then be governed by access control and encryption). The use of mutual TLS (mTLS) means even network data on the wire isn't in clear text for others to potentially sniff. UDSâ\x80\x99s containerization and encryption prevent data from one context leaking via shared system resources (like CPU caches, network, etc.) to another context."
