control-acronym: SI-7(14)
control-information: >-
  Description:

  The organization:

  (a) Prohibits the use of binary or machine-executable code from sources with
  limited or no warranty and without the provision of source code; and

  (b) Provides exceptions to the source code requirement only for compelling
  mission/operational requirements and with the approval of the authorizing
  official.


  Supplemental Guidance:

  This control enhancement applies to all sources of binary or
  machine-executable code including, for example, commercial software/firmware
  and open source software. Organizations assess software products without
  accompanying source code from sources with limited or no warranty for
  potential security impacts. The assessments address the fact that these types
  of software products may be very difficult to review, repair, or extend, given
  that organizations, in most cases, do not have access to the original source
  code, and there may be no owners who could make such repairs on behalf of
  organizations. Related control: SA-5.


  Potential Assessment Methods and Objectives:

  The below information from the NIST SP 800-53 Revision 4 Security Catalog is
  intended to provide additional optional mechanisms to take into account when
  reviewing this Security Control. Assessments of the individual security
  requirements must still include a response to the specific procedures/guidance
  stated in the correlated Assessment Procedures.

  Examine: [SELECT FROM: System and information integrity policy; procedures
  addressing software, firmware, and information integrity; information system
  design documentation; information system configuration settings and associated
  documentation; approval records for execution of binary and machine-executable
  code; information system audit records; other relevant documents or records].


  Interview: [SELECT FROM: Organizational personnel with responsibility for
  software, firmware, and/or information integrity; organizational personnel
  with information security responsibilities; authorizing official;
  system/network administrators; system developer].


  Test: [SELECT FROM: Automated mechanisms supporting and/or implementing
  prohibition of the execution of binary or machine-executable code].
control-implementation-status: Implemented
security-control-designation: System-Specific
control-implementation-narrative: Control compliance provided by System Owner...
ap-acronym: SI-7(14).1
cci: 2737
cci-definition: "002737: The organization prohibits the use of binary or
  machine-executable code from sources with limited or no warranty and without
  the provision of source code."
implementation-guidance: >-
  The organization being inspected/assessed prohibits the use of binary or
  machine-executable code obtained from sources without vendor support or with
  no warranty and without the provision of source code.


  Recommended Compelling Evidence:

  1.) Signed and dated System security plan with reference to section that
  prohibits the use of binary or machine-executable code obtained from sources
  without vendor support or with no warranty and without the provision of source
  code.
assessment-procedures: The organization conducting the inspection/assessment
  obtains and examines the software list and examines the information system to
  ensure the organization being inspected/assessed prohibits the use of binary
  or machine-executable code obtained from sources without vendor support or
  with no warranty and without the provision of source code.
inherited: Local
remote-inheritance-instance: "-"
compliance-status: Compliant
test-results: UDS inherently promotes and supports transparency and traceability
  through the use of Infrastructure as Code (IaC) via OpenTofu, containerized
  deployments managed with Zarf, and rigorous Software Bill of Materials (SBOM)
  compliance. All components used within the UDS ecosystem are open-source or
  obtained from reputable sources, which provide comprehensive access to source
  code, documentation, and community-driven security validation. While UDS
  strongly facilitates adherence to this control, explicitly prohibiting the use
  of binary or executable code from sources without warranty or source code
  provision remains an organizational policy requirement that must be enforced
  procedurally outside the technical implementation of the UDS platform itself.
uds-alignment: OpenTofu, Zarf
family: SI
