control-acronym: "[r5] IA-05(07)"
control-information: >-
  Description:

  Ensure that unencrypted static authenticators are not embedded in applications
  or other forms of static storage.


  Supplemental Guidance:

  In addition to applications, other forms of static storage include access
  scripts and function keys. Organizations exercise caution when determining
  whether embedded or stored authenticators are in encrypted or unencrypted
  form. If authenticators are used in the manner stored, then those
  representations are considered unencrypted authenticators. Related Control(s):
  None.


  Potential Assessment Methods and Objectives:

  The below information from the NIST SP 800-53 Revision 5 Security Catalog is
  intended to provide additional optional mechanisms to take into account when
  reviewing this Security Control. Assessments of the individual security
  requirements must still include a response to the specific procedures/guidance
  stated in the correlated Assessment Procedures.


  Examine: [SELECT FROM: Identification and authentication policy; system
  security plan; procedures addressing authenticator management; system design
  documentation; system configuration settings and associated documentation;
  logical access scripts; application code reviews for detecting unencrypted
  static authenticators; other relevant documents or records].


  Interview: [SELECT FROM: Organizational personnel with authenticator
  management responsibilities; organizational personnel with information
  security responsibilities; system/network administrators; system developers].


  Test: [SELECT FROM: Mechanisms supporting and/or implementing authenticator
  management capability; mechanisms implementing authentication in
  applications].


  Statement of Weakness:

  None
control-implementation-status: Planned
security-control-designation: System-Specific
control-implementation-narrative: ...
ap-acronym: IA-05(07)
cci: 4069
cci-definition: "004069: Ensure that the unencrypted static authenticators are
  not embedded in applications or other forms of static storage."
implementation-guidance: "-"
assessment-procedures: Determine if unencrypted static authenticators are not
  embedded in applications or other forms of static storage.
inherited: Local
remote-inheritance-instance: "-"
compliance-status: Need Review
test-results: >-
  In UDS, unencrypted static authenticators are strictly prohibited from being
  embedded in access scripts. Instead, all sensitive credentials are managed
  securely using encrypted storage mechanisms such as Kubernetes Secrets and
  secure vaults integrated with Keycloak and are dynamically injected at
  runtime. 

  In UDS, unencrypted static authenticators are never stored on function keys.
  Instead, any credentials or secrets required by function keys are securely
  encrypted and managed via mechanisms such as Kubernetes Secrets and secure
  vault integrations. UDS does not utilize or support the storage of unencrypted
  static authenticators (e.g., passwords or tokens) on hardware-based function
  keys or programmable keys. Authentication within UDS is managed centrally
  through Keycloak, employing secure digital certificates, multifactor
  authentication (e.g., CAC/PIV cards), and cryptographically secured tokens.

  In UDS, unencrypted static authenticators are explicitly disallowed from being
  hard-coded into application binaries or source code. Instead, sensitive
  authentication credentials are centrally managed using Kubernetes Secrets,
  which can be configured to store secrets in base64-encoded form and optionally
  encrypt them at rest using an encryption provider in etcd. These credentials
  are dynamically injected into application pods at runtime through environment
  variables or mounted as secret volumes, ensuring that no plaintext values are
  included in the application image. Additionally, UDS integrates with secure
  vault solutions that provide API-driven access to secrets with fine-grained
  access controls and audit logging. Keycloakâ€™s credential management further
  enforces secure storage and retrieval of authentication data by using
  token-based authentication flows and certificate-based validation, ensuring
  that credentials are never statically embedded.
rev-4-migration-notes: "Automatically generated test result during Revision 5
  control set migration based on the following mapped Rev. 4 assessment
  procedures: IA-5(7).1, IA-5(7).2, IA-5(7).3; as well as the following Rev. 5
  security requirements: CCI-004069. The resulting compliance status was set to
  non-compliant because of the addition of a new security requirement to the
  assessment procedure that has not been previously assessed: CCI-004069."
mapped-rev4-aps: IA-5(7)
family: IA
