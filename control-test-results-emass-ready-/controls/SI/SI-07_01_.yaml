control-acronym: "[r5] SI-07(01)"
control-information: >-
  Description:

  Perform an integrity check of [Assignment: organization-defined software,
  firmware, and information] [Selection (one or more): at startup; at
  [Assignment: organization-defined transitional states or security-relevant
  events]; [Assignment: organization-defined frequency]].


  Supplemental Guidance:

  Security-relevant events include the identification of new threats to which
  organizational systems are susceptible and the installation of new hardware,
  software, or firmware. Transitional states include system startup, restart,
  shutdown, and abort. Related Control(s): None.


  Potential Assessment Methods and Objectives:

  The below information from the NIST SP 800-53 Revision 5 Security Catalog is
  intended to provide additional optional mechanisms to take into account when
  reviewing this Security Control. Assessments of the individual security
  requirements must still include a response to the specific procedures/guidance
  stated in the correlated Assessment Procedures.


  Examine: [SELECT FROM: System and information integrity policy; system and
  information integrity procedures; procedures addressing software, firmware,
  and information integrity testing; system design documentation; system
  configuration settings and associated documentation; integrity verification
  tools and associated documentation; records of integrity scans; system
  security plan; other relevant documents or records].


  Interview: [SELECT FROM: Organizational personnel responsible for software,
  firmware, and/or information integrity; organizational personnel with
  information security responsibilities; system/network administrators; system
  developer].


  Test: [SELECT FROM: Software, firmware, and information integrity verification
  tools].


  Statement of Weakness:

  None
control-implementation-status: Planned
security-control-designation: System-Specific
control-implementation-narrative: ...
ap-acronym: SI-07(01)
cci: 002705; 002706; 002707; 002708; 002709; 002710; 002711; 002712
cci-definition: "002705: Defines the software on which integrity checks will be
  performed.; 002706: Defines the firmware on which integrity checks will be
  performed.; 002707: Defines the information on which integrity checks will be
  performed.; 002708: Defines the transitional state or security-relevant events
  when performing integrity checks on software, firmware, and information.;
  002709: Defines the frequency at which integrity checks of software, firmware,
  and information will be performed.; 002710: Perform an integrity check of
  organization-defined software at startup, at organization-defined transitional
  states or security-relevant events, or on an organization-defined frequency.;
  002711: Perform an integrity check of organization-defined firmware at
  startup, at organization-defined transitional states or security-relevant
  events, or on an organization-defined frequency.; 002712: Perform an integrity
  check of organization-defined information at startup, at organization-defined
  transitional states or security-relevant events, or on an organization-defined
  frequency."
implementation-guidance: CCI-002709 of this assessment procedure is
  automatically compliant because of coverage by DoD Enterprise.
assessment-procedures: >-
  Determine if:

  - an integrity check of [Assignment: organization-defined software, firmware,
  and information] is performed [Selection (one or more): at startup; at
  [Assignment: organization-defined transitional states or security-relevant
  events]; [Assignment: organization-defined frequency]].
inherited: Common Control Package
remote-inheritance-instance: "-"
compliance-status: Need Review
test-results: >-
  Automatically generated test result during Revision 5 control set migration
  based on the following mapped Rev. 4 assessment procedures: SI-7(1).1,
  SI-7(1).2, SI-7(1).3, SI-7(1).4, SI-7(1).5, SI-7(1).6, SI-7(1).7, SI-7(1).8.
  The resulting compliance status was set to non-compliant because the following
  Rev. 4 assessment procedure had no locally entered test result/compliance
  statement: SI-7(1).3.


  UDS provides inherent capabilities to support integrity checking through its
  containerized deployment model and Infrastructure as Code (IaC) practices.
  Specifically, all deployed software components within UDS including Keycloak,
  Istio, and core Kubernetes resources are packaged and distributed via signed
  and version-controlled Zarf packages, which inherently include cryptographic
  hashes to verify software integrity prior to deployment. There’s confidence
  the code running is exactly what was published by the provider. Configuration
  Integrity is done through Pepr policies enforce that Kubernetes resources
  maintain expected settings (e.g., images with known good digests, certain
  labels present). If someone tried to deploy an unapproved image, the admission
  controller would reject it. All communications are integrity-protected (per
  SC-8) and data at rest can be encrypted (SC-28). Also, version control of IaC
  means any config change is tracked. UDS ensures that the system’s software and
  information cannot be altered undetectably. If an unauthorized change occurs,
  it will either be prevented or logged/alerted.

  This control has been inherited and will receive test results from the
  providing system or Common Control Package.

  Not Applicable to UDS technology stack. (The organization must define what
  information should receive integrity checks though UDS does implement them for
  software deployed.)

  In UDS, integrity checks on software, firmware, and information are
  systematically performed during defined transitional states and in response to
  security-relevant events. For instance, integrity validations occur during
  deployment when new Zarf packages and container images are launched and when
  configuration changes are applied through Infrastructure as Code (OpenTofu).
  Pepr serves as a policy engine that can be configured to automatically trigger
  integrity verifications during key events—such as before and after deployment
  transitions, configuration changes, or when security-relevant incidents occur.
  For example, when a new Zarf package is staged for deployment or when
  unauthorized modifications are detected, Pepr can enforce pre-defined policies
  that prompt an immediate integrity check, comparing critical software,
  firmware, and configuration files against an approved baseline. This automated
  enforcement helps ensure that any deviations are promptly detected and
  remediated, thereby strengthening the overall security posture in accordance
  with organization-defined requirements.

  In UDS, integrity checks for organization-defined software are performed at
  multiple points throughout the system lifecycle. At startup, each container
  image or Zarf package is validated using cryptographic signatures and baseline
  comparisons via OpenTofu to ensure that only approved software is deployed.
  Transitional states such as during deployments, configuration changes, or
  security-relevant events trigger automated integrity checks through Pepr
  policies, which promptly revalidate the affected components and flag any
  deviations.
rev-4-migration-notes: "Automatically generated test result during Revision 5
  control set migration based on the following mapped Rev. 4 assessment
  procedures: SI-7(1).1, SI-7(1).2, SI-7(1).3, SI-7(1).4, SI-7(1).5, SI-7(1).6,
  SI-7(1).7, SI-7(1).8. The resulting compliance status was set to non-compliant
  because the following Rev. 4 assessment procedure had no locally entered test
  result/compliance statement: SI-7(1).3."
mapped-rev4-aps: SI-7(1)
family: SI
