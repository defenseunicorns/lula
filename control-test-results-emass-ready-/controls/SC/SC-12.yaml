control-acronym: "[r5] SC-12"
control-information: >-
  Description:

  Establish and manage cryptographic keys when cryptography is employed within
  the system in accordance with the following key management requirements:
  [Assignment: organization-defined requirements for key generation,
  distribution, storage, access, and destruction].


  Supplemental Guidance:

  Cryptographic key management and establishment can be performed using manual
  procedures or automated mechanisms with supporting manual procedures.
  Organizations define key management requirements in accordance with applicable
  laws, executive orders, directives, regulations, policies, standards, and
  guidelines and specify appropriate options, parameters, and levels.
  Organizations manage trust stores to ensure that only approved trust anchors
  are part of such trust stores. This includes certificates with visibility
  external to organizational systems and certificates related to the internal
  operations of systems. NIST CMVP and NIST CAVP provide additional information
  on validated cryptographic modules and algorithms that can be used in
  cryptographic key management and establishment. Related Control(s): AC-17,
  AU-9, AU-10, CM-3, IA-3, IA-7, SA-4, SA-8, SA-9, SC-8, SC-11, SC-12, SC-13,
  SC-17, SC-20, SC-37, SC-40, SI-3, SI-7.


  Potential Assessment Methods and Objectives:

  The below information from the NIST SP 800-53 Revision 5 Security Catalog is
  intended to provide additional optional mechanisms to take into account when
  reviewing this Security Control. Assessments of the individual security
  requirements must still include a response to the specific procedures/guidance
  stated in the correlated Assessment Procedures.


  Examine: [SELECT FROM: System and communications protection policy; procedures
  addressing cryptographic key establishment and management; system design
  documentation; cryptographic mechanisms; system configuration settings and
  associated documentation; system audit records; system security plan; other
  relevant documents or records].


  Interview: [SELECT FROM: System/network administrators; organizational
  personnel with information security responsibilities; organizational personnel
  with responsibilities for cryptographic key establishment and/or management].


  Test: [SELECT FROM: Mechanisms supporting and/or implementing cryptographic
  key establishment and management].


  Statement of Weakness:

  None
control-implementation-status: Planned
security-control-designation: System-Specific
control-implementation-narrative: ...
ap-acronym: SC-12
cci: 002428; 002429; 002430; 002431; 002432; 002433; 002434; 002435; 002436;
  002437; 002438; 002439; 002440; 002441; 002442
cci-definition: "002428: Defines the requirements for cryptographic key
  generation to be employed within the system.; 002429: Defines the requirements
  for cryptographic key distribution to be employed within the system.; 002430:
  Defines the requirements for cryptographic key storage to be employed within
  the system.; 002431: Defines the requirements for cryptographic key access to
  be employed within the system.; 002432: Defines the requirements for
  cryptographic key destruction to be employed within the system.; 002433:
  Establish cryptographic keys when cryptography employed within the system in
  accordance with organization-defined requirements for key generation.; 002434:
  Establish cryptographic keys when cryptography employed within the system in
  accordance with organization-defined requirements for key distribution.;
  002435: Establish cryptographic keys when cryptography employed within the
  system in accordance with organization-defined requirements for key storage.;
  002436: Establish cryptographic keys when cryptography employed within the
  system in accordance with organization-defined requirements for key access.;
  002437: Establish cryptographic keys when cryptography employed within the
  system in accordance with organization-defined requirements for key
  destruction.; 002438: Manage cryptographic keys when cryptography employed
  within the system in accordance with organization-defined requirements for key
  generation.; 002439: Manage cryptographic keys when cryptography employed
  within the system in accordance with organization-defined requirements for key
  distribution.; 002440: Manage cryptographic keys when cryptography employed
  within the system in accordance with organization-defined requirements for key
  storage.; 002441: Manage cryptographic keys when cryptography employed within
  the system in accordance with organization-defined requirements for key
  access.; 002442: Manage cryptographic keys when cryptography employed within
  the system in accordance with organization-defined requirements for key
  destruction."
implementation-guidance: CCI-002428, CCI-002429, CCI-002430, CCI-002431, and
  CCI-002432 of this assessment procedure are automatically compliant because of
  coverage by DoD Enterprise.
assessment-procedures: >-
  Determine if:

  - cryptographic keys are established when cryptography is employed within the
  system in accordance with [Assignment: organization-defined requirements for
  key generation, distribution, storage, access, and destruction].

  - cryptographic keys are managed when cryptography is employed within the
  system in accordance with [Assignment: organization-defined requirements for
  key generation, distribution, storage, access, and destruction].
inherited: Common Control Package
remote-inheritance-instance: "-"
compliance-status: Need Review
test-results: >-
  Automatically generated test result during Revision 5 control set migration
  based on the following mapped Rev. 4 assessment procedures: SC-12.1, SC-12.2,
  SC-12.3, SC-12.4, SC-12.5, SC-12.6, SC-12.7, SC-12.8, SC-12.9, SC-12.10,
  SC-12.11, SC-12.12, SC-12.13, SC-12.14, SC-12.15. The resulting compliance
  status was set to non-compliant because the following Rev. 4 assessment
  procedure had no locally entered test result/compliance statement: SC-12.15.


  This control has been inherited and will receive test results from the
  providing system or Common Control Package.

  In UDS, cryptographic key establishment is integrated into the deployment and
  operational processes to ensure that keys are generated, stored, and rotated
  in accordance with organization-defined requirements, including those
  specified in DoDI 8520.02 and DoDI 8520.03. For instance, Zarf packages
  utilize cryptographic signing with tools such as cosign to verify the
  integrity and provenance of container images, while Istio’s built-in key
  management (via its Citadel/ Istiod component) automatically issues and
  rotates mTLS certificates using FIPS-approved algorithms. Additionally,
  Keycloak employs secure cryptographic methods for token signing and can
  integrate with external PKI solutions, and Kubernetes Secrets ensure that
  sensitive keys are stored securely. Velero can encrypt backups with keys,
  which the admin manages (often integration with cloud KMS if available). All
  keys are protected in secure stores (Kubernetes secrets are by default base64
  encoded; for stronger protection, K8s can integrate with a KMS to encrypt
  secrets at rest). UDS documentation encourages using such features for
  compliance. The result is that cryptographic keys are generated, distributed
  to only those entities that need them (e.g., only the service’s sidecar gets
  its private key), and periodically refreshed. 

  In the UDS architecture, cryptographic key distribution is managed through an
  integrated process that meets organization-defined requirements. Istio’s
  built-in certificate authority automatically generates and securely
  distributes mTLS certificates among microservices, ensuring that keys are
  transmitted over encrypted channels and tied to authenticated identities.
  Additionally, Zarf’s packaging process employs cryptographic signing (using
  tools like cosign) to verify the integrity and authenticity of distributed
  software components, while Keycloak securely handles key distribution for
  token signing and authentication. Kubernetes Secrets further protect sensitive
  cryptographic material, and the documented procedures ensure that keys are
  distributed and rotated

  In UDS, cryptographic keys are securely stored in accordance with
  organization-defined key storage requirements. Istio’s key management
  integrates with Kubernetes Secrets which can be encrypted at rest via etcd
  encryption and protected with strict RBAC to securely house service
  certificates and other cryptographic material. Keycloak similarly stores its
  token signing keys and credentials within a secured internal store that can be
  augmented with external PKI or HSM integration if needed. Zarf’s deployment
  process employs cryptographic signing tools (such as cosign) to manage and
  verify package integrity, with associated signing keys stored in secure,
  access-controlled environments.

  In UDS, access to cryptographic keys is controlled in line with
  organization-defined key access requirements. Kubernetes Secrets, which store
  service certificates and sensitive cryptographic material, are protected by
  strict Role-Based Access Control (RBAC) and can be integrated with
  encryption-at-rest mechanisms to ensure that only authorized services and
  administrators can retrieve and use these keys. Istio’s mTLS framework ensures
  that only authenticated and trusted microservices receive the necessary keys,
  while Keycloak restricts access to its token signing keys through secure
  administrative interfaces and proper access controls. This layered approach to
  key access management.

  In UDS, cryptographic key destruction is integrated into the key lifecycle
  management process to ensure that once keys reach end-of-life, are rotated, or
  are otherwise no longer required, they are securely and irreversibly
  eliminated in accordance with organization-defined policies and DoD
  requirements. For instance, Istio automatically retires expired mTLS
  certificates and securely purges the associated keys from its certificate
  authority, while Kubernetes Secrets storing sensitive cryptographic material
  are configured to remove keys securely from etcd, ensuring that deleted keys
  cannot be recovered. Keycloak’s key rotation and revocation processes enforce
  the secure destruction of outdated signing keys through controlled
  administrative procedures.
rev-4-migration-notes: "Automatically generated test result during Revision 5
  control set migration based on the following mapped Rev. 4 assessment
  procedures: SC-12.1, SC-12.2, SC-12.3, SC-12.4, SC-12.5, SC-12.6, SC-12.7,
  SC-12.8, SC-12.9, SC-12.10, SC-12.11, SC-12.12, SC-12.13, SC-12.14, SC-12.15.
  The resulting compliance status was set to non-compliant because the following
  Rev. 4 assessment procedure had no locally entered test result/compliance
  statement: SC-12.15."
mapped-rev4-aps: SC-12.1; SC-12.10; SC-12.11; SC-12.12; SC-12.13; SC-12.14;
  SC-12.15; SC-12.2; SC-12.3; SC-12.4; SC-12.5; SC-12.6; SC-12.7; SC-12.8;
  SC-12.9
family: SC
