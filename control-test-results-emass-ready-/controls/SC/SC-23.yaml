control-acronym: "[r5] SC-23"
control-information: >-
  Description:

  Protect the authenticity of communications sessions.


  Supplemental Guidance:

  Protecting session authenticity addresses communications protection at the
  session level, not at the packet level. Such protection establishes grounds
  for confidence at both ends of communications sessions in the ongoing
  identities of other parties and the validity of transmitted information.
  Authenticity protection includes protecting against man-in-the-middle attacks,
  session hijacking, and the insertion of false information into sessions.
  Related Control(s): AU-10, SC-8, SC-10, SC-11.


  Potential Assessment Methods and Objectives:

  The below information from the NIST SP 800-53 Revision 5 Security Catalog is
  intended to provide additional optional mechanisms to take into account when
  reviewing this Security Control. Assessments of the individual security
  requirements must still include a response to the specific procedures/guidance
  stated in the correlated Assessment Procedures.


  Examine: [SELECT FROM: System and communications protection policy; procedures
  addressing session authenticity; system design documentation; system
  configuration settings and associated documentation; system audit records;
  system security plan; other relevant documents or records].


  Interview: [SELECT FROM: System/network administrators; organizational
  personnel with information security responsibilities].


  Test: [SELECT FROM: Mechanisms supporting and/or implementing session
  authenticity].


  Statement of Weakness:

  None
control-implementation-status: Planned
security-control-designation: System-Specific
control-implementation-narrative: ...
ap-acronym: SC-23
cci: 1184
cci-definition: "001184: Protect the authenticity of communications sessions."
implementation-guidance: "-"
assessment-procedures: Determine if the authenticity of communication sessions is protected.
inherited: Local
remote-inheritance-instance: "-"
compliance-status: Compliant
test-results: UDS enables session authenticity through use of cryptographically
  strong session tokens and handshakes. When a user authenticates, Keycloak
  issues a JWT access token. This token is digitally signed by Keycloak and
  embedded with the user’s identity and claims. Services within UDS (via
  Authservice/Istio) validate this token on each request. Because the token is
  signed and has a limited lifetime, it cannot be forged or reused
  illegitimately ensuring the session is indeed tied to that user and is
  authentic​. Service sessions use Mutual TLS between services which ensures
  each connection is not only encrypted but the endpoints are verified by certs.
  So any persistent session or connection between microservices is guaranteed to
  be with the genuine intended service, not an impostor. If a session token is
  tampered with, the signature check will fail and the request is rejected. In
  essence, UDS’s use of strong identity tokens and certificates upholds session
  authenticity.
rev-4-migration-notes: "Automatically generated test result during Revision 5
  control set migration based on the following mapped Rev. 4 assessment
  procedures: SC-23.1."
mapped-rev4-aps: SC-23.1
family: SC
