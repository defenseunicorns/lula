# Workflows that can be called on demand
name: on-demand-workflows

on:
  workflow_call:
    inputs:
      run-format:
        description: "Run format check"
        required: false
        default: false
        type: boolean
      run-units:
        description: "Run unit tests"
        required: false
        default: false
        type: boolean
      run-integration:
        description: "Run integration tests"
        required: false
        default: false
        type: boolean

    secrets:
      CHAINGUARD_IDENTITY:
        required: false
      CODECOV_TOKEN:
        required: false

permissions:
  id-token: write # This is needed for OIDC federation.
  contents: read

jobs:
  format:
    if: inputs.run-format == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: '22.x'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Ensure pnpm store exists
        run: pnpm store path | xargs -I{} mkdir -p "{}"
      - run: pnpm install
      - run: pnpm run format:check

  unit-test:
    if: inputs.run-units == true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22, 24]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: '22.x'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Ensure pnpm store exists
        run: pnpm store path | xargs -I{} mkdir -p "{}"
      - run: pnpm install
      - run: npm run test:unit -- --run --coverage --coverage.reporter=lcov --coverage.reportsDirectory=coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  integration-test:
    if: inputs.run-integration == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: '22.x'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Ensure pnpm store exists
        run: pnpm store path | xargs -I{} mkdir -p "{}"
      - run: pnpm install
      - run: pnpm run build
      - run: pnpm run test:integration
        timeout-minutes: 10
